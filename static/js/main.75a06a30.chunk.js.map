{"version":3,"sources":["components/Blocks/Grid.module.scss","App.module.scss","components/UI/Display-Panel.module.scss","components/UI/Circular-Button.module.scss","components/Blocks/Key.tsx","components/Algorithms/QuickSort.ts","components/Algorithms/HeapSort.ts","components/Algorithms/MergeSort.ts","components/Blocks/Grid.tsx","components/Algorithms/BubbleSort.ts","components/UI/Range.tsx","components/UI/Display-Panel.tsx","components/UI/Circular-Button.tsx","components/UI/Control-Panel.tsx","App.tsx","app/store.ts","serviceWorkerRegistration.ts","index.tsx","components/UI/Range.module.scss","components/Blocks/Key.module.scss","components/UI/Control-Panel.module.scss"],"names":["module","exports","Key","props","className","selected","Style","Key__Selected","section","Key__Section","style","height","size","id","iden","React","memo","partition","arr","start","end","animations","pivotValue","pivotPos","i","push","swap","NaN","quickSortIterative","partitionInd","arrStack","length","pop","heapify","arrLength","largestValueIndex","largestIndex","leftIndex","rightIndex","shiftCheck","array","shiftValue","shift","undefined","mergeSortAlg","copyArray","half","left","right","indexArr","leftCopy","slice","rightCopy","indexOf","merge","splice","Grid","generateArray","keysSize","number","Math","floor","random","includes","regenerateArray","setKeys","setCurrentSection","setIsSorted","setCurrentFrame","startSorting","setSortRunningF","isSorted","setAnim","keys","selectAlgorithm","mergeSort","lastParentIndex","lastChildIndex","heapSort","check","bubbleSort","startAnimate","currentFrameRef","current","animRef","s","frame","setCurrentAnim","setKeysModif","v","setTimeout","selectSpeed","useState","firstRender","setFirstRender","setKeysSize","keysModif","anim","useRef","currentAnim","currentFrame","currentSection","useEffect","sortRunning","startSort","startGenerateArray","selectSize","Grid_Container","map","k","Range","activeCircle","setActiveCircle","Range_InputContainer","numOfElements","e","Range_InputContainer_Label","htmlFor","Range_InputContainer_Circle","type","name","title","onClick","selectAlgorithmF","Range_InputContainer_Indicator","Range_InputContainer_Line","Range_TextContainer","Range_TextContainer_Text__Active","Range_TextContainer_Text","DisplayPanel","CircularButton","repeatAnim","setRepeatAnim","aria-label","CircularButton__Disabled","CircularButton__Indicator","CircularButton__Design","setGenerateArrayF","setStarSortF","selectSpeedF","selectSizeF","onWheel","nativeEvent","deltaY","CircularButton_Svg","cx","cy","r","CircularButton_Svg_Circle","strokeDashoffset","CircularButton_Play","display","CircularButton_Repeat","CircularButton_Repeat__Active","CircularButton_Speed","CircularButton_Size","ControlPanel","App","setStarSort","setSortRunning","setStartGenerateArray","setSelectAlgorithm","setSelectSpeed","setSelectSize","App__Container","value","store","configureStore","reducer","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.75a06a30.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Grid\":\"Grid_Grid__20yHP\",\"Grid_Container\":\"Grid_Grid_Container__EQZ8D\",\"Key\":\"Grid_Key__3Ek04\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__3JBfb\",\"App__Container\":\"App_App__Container__PFFr9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DisplayPanel\":\"Display-Panel_DisplayPanel__3fIh4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CircularButton\":\"Circular-Button_CircularButton__19yct\",\"CircularButton_Play\":\"Circular-Button_CircularButton_Play__uZmvG\",\"CircularButton_Repeat\":\"Circular-Button_CircularButton_Repeat__2YQFo\",\"CircularButton_Repeat__Active\":\"Circular-Button_CircularButton_Repeat__Active__2FMeB\",\"repeatAnim\":\"Circular-Button_repeatAnim__1r-EJ\",\"CircularButton_Speed\":\"Circular-Button_CircularButton_Speed__3l5xg\",\"CircularButton_Size\":\"Circular-Button_CircularButton_Size__VDiqs\",\"CircularButton_Svg\":\"Circular-Button_CircularButton_Svg__1jsY1\",\"CircularButton_Svg_Circle\":\"Circular-Button_CircularButton_Svg_Circle__3lUG5\",\"CircularButton__Disabled\":\"Circular-Button_CircularButton__Disabled__3mHFB\",\"CircularButton__Design\":\"Circular-Button_CircularButton__Design__rJVg3\",\"CircularButton__Indicator\":\"Circular-Button_CircularButton__Indicator__2h00s\"};","import React from \"react\";\nimport Style from \"./Key.module.scss\";\n\n// Interface\n\ninterface props {\n  iden: string;\n  size: number;\n  selected: boolean;\n  section: boolean;\n}\n\nfunction Key(props: props) {\n  return (\n    <div\n      className={\n        props.selected\n          ? `${Style.Key} ${Style.Key__Selected}`\n          : props.section\n          ? `${Style.Key} ${Style.Key__Section}`\n          : Style.Key\n      }\n      style={{\n        height: `${props.size * 4}px`,\n      }}\n      id={props.iden}\n    ></div>\n  );\n}\n\nexport default React.memo(Key);\n","// Interface\n\ninterface animations {\n  swap: Array<Array<number>>;\n  section: Array<Array<number>>;\n}\n\n// Algorithm\n\nexport const partition = (\n  arr: Array<number>,\n  start: number,\n  end: number,\n  animations: animations\n) => {\n  const pivotValue = arr[end];\n  let pivotPos = start;\n\n  for (let i = start; i < end; i++) {\n    animations.section.push([start, end]);\n\n    if (arr[i] < pivotValue) {\n      animations.swap.push([i, arr[pivotPos], pivotPos, arr[i]]);\n\n      [arr[i], arr[pivotPos]] = [arr[pivotPos], arr[i]];\n\n      pivotPos++;\n    } else {\n      animations.swap.push([NaN, NaN]);\n    }\n  }\n  animations.section.push([start, end]);\n  animations.swap.push([end, arr[pivotPos], pivotPos, arr[end]]);\n\n  [arr[end], arr[pivotPos]] = [arr[pivotPos], arr[end]];\n\n  return pivotPos;\n};\n\nexport const quickSortRecursive = (\n  arr: Array<number>,\n  start: number,\n  end: number\n) => {\n  const animations = {\n    swap: [],\n    section: [],\n  };\n\n  if (start >= end) {\n    return;\n  }\n\n  const pivotPos = partition(arr, start, end, animations);\n\n  quickSortRecursive(arr, start, pivotPos - 1);\n  quickSortRecursive(arr, pivotPos + 1, end);\n};\n\nexport const quickSortIterative = (arr: Array<number>) => {\n  let partitionInd = 0;\n  const arrStack = [0, arr.length - 1];\n\n  const animations: animations = {\n    swap: [],\n    section: [],\n  };\n\n  while (arrStack[arrStack.length - 1] >= 0) {\n    const end = arrStack.pop() || 0;\n    const start = arrStack.pop() || 0;\n\n    partitionInd = partition(arr, start, end, animations);\n\n    if (partitionInd - 1 > start) {\n      arrStack.push(start);\n      arrStack.push(partitionInd - 1);\n    }\n\n    if (partitionInd + 1 < end) {\n      arrStack.push(partitionInd + 1);\n      arrStack.push(end);\n    }\n  }\n  return animations;\n};\n","// Interface\n\ninterface animations {\n  swap: Array<Array<number>>;\n  section: Array<Array<number>>;\n}\n\n// Algorithm\n\nconst heapify = (\n  arr: Array<number>,\n  arrLength: number,\n  largestValueIndex: number,\n  animations: animations\n): Array<number> => {\n  let largestIndex = largestValueIndex;\n  const leftIndex = largestIndex * 2 + 1;\n  const rightIndex = leftIndex + 1;\n\n  if (leftIndex < arrLength && arr[leftIndex] > arr[largestIndex]) {\n    largestIndex = leftIndex;\n  }\n  if (rightIndex < arrLength && arr[rightIndex] > arr[largestIndex]) {\n    largestIndex = rightIndex;\n  }\n  if (largestIndex !== largestValueIndex) {\n    animations.swap.push([\n      largestValueIndex,\n      arr[largestIndex],\n      largestIndex,\n      arr[largestValueIndex],\n    ]);\n    animations.section.push([0, arrLength]);\n    [arr[largestValueIndex], arr[largestIndex]] = [\n      arr[largestIndex],\n      arr[largestValueIndex],\n    ];\n\n    heapify(arr, arrLength, largestIndex, animations);\n  }\n  return arr;\n};\n\nexport const heapSort = (arr: Array<number>) => {\n  const arrLength = arr.length;\n  let lastParentIndex = Math.floor(arrLength / 2 - 1);\n  let lastChildIndex = arrLength - 1;\n  const animations: animations = {\n    swap: [],\n    section: [],\n  };\n  while (lastParentIndex >= 0) {\n    heapify(arr, arrLength, lastParentIndex, animations);\n    lastParentIndex--;\n  }\n\n  while (lastChildIndex >= 0) {\n    animations.swap.push([0, arr[lastChildIndex], lastChildIndex, arr[0]]);\n    animations.section.push([0, arrLength]);\n    [arr[0], arr[lastChildIndex]] = [arr[lastChildIndex], arr[0]];\n    heapify(arr, lastChildIndex, 0, animations);\n    lastChildIndex--;\n  }\n  return animations;\n};\n","// Interface\n\ninterface animations {\n  swap: Array<Array<number>>;\n  section: Array<Array<number>>;\n}\n\n// Algorithm\n\nconst shiftCheck = (array: Array<number>): number => {\n  const shiftValue = array.shift();\n  if (shiftValue === undefined) {\n    return NaN;\n  } else {\n    return shiftValue;\n  }\n};\n\nconst merge = (\n  left: Array<number>,\n  right: Array<number>,\n  copyArray: Array<number>,\n  animations: animations\n): Array<number> => {\n  const arr = [];\n  const indexArr: Array<number> = [];\n  const leftCopy = left.slice(0);\n  const rightCopy = right.slice(0);\n\n  for (const i of left) {\n    indexArr.push(copyArray.indexOf(i));\n  }\n\n  for (const i of right) {\n    indexArr.push(copyArray.indexOf(i));\n  }\n\n  const section = [indexArr[0], indexArr[indexArr.length - 1]];\n\n  while (left.length && right.length) {\n    if (left[0] < right[0]) {\n      animations.swap.push([\n        indexArr[0],\n        left[0],\n        copyArray.indexOf(left[0]),\n        copyArray[indexArr[0]],\n      ]);\n      copyArray[copyArray.indexOf(left[0])] = copyArray[indexArr[0]];\n      copyArray[shiftCheck(indexArr)] = left[0];\n      arr.push(shiftCheck(left));\n      leftCopy.shift();\n    } else {\n      animations.swap.push([\n        indexArr[0],\n        right[0],\n        copyArray.indexOf(right[0]),\n        copyArray[indexArr[0]],\n      ]);\n\n      copyArray[copyArray.indexOf(right[0])] = copyArray[indexArr[0]];\n      copyArray[shiftCheck(indexArr)] = right[0];\n      arr.push(shiftCheck(right));\n      rightCopy.shift();\n    }\n    animations.section.push(section);\n  }\n\n  while (indexArr.length) {\n    if (leftCopy.length) {\n      animations.swap.push([\n        indexArr[0],\n        leftCopy[0],\n        copyArray.indexOf(leftCopy[0]),\n        copyArray[indexArr[0]],\n      ]);\n      copyArray[copyArray.indexOf(leftCopy[0])] = copyArray[indexArr[0]];\n      copyArray[shiftCheck(indexArr)] = shiftCheck(leftCopy);\n    } else {\n      animations.swap.push([\n        indexArr[0],\n        rightCopy[0],\n        copyArray.indexOf(rightCopy[0]),\n        copyArray[indexArr[0]],\n      ]);\n      copyArray[copyArray.indexOf(rightCopy[0])] = copyArray[indexArr[0]];\n      copyArray[shiftCheck(indexArr)] = shiftCheck(rightCopy);\n    }\n    animations.section.push(section);\n  }\n\n  return [...arr, ...left, ...right];\n};\n\nexport const mergeSortAlg = (\n  array: Array<number>,\n  copyArray: Array<number>,\n  animations: animations\n): Array<number> => {\n  const half = array.length / 2;\n  if (array.length < 2) {\n    return array;\n  }\n  const left = array.splice(0, half);\n\n  return merge(\n    mergeSortAlg(left, copyArray, animations),\n    mergeSortAlg(array, copyArray, animations),\n    copyArray,\n    animations\n  );\n};\n\nexport const mergeSort = (array: Array<number>) => {\n  const copyArray = array.slice(0);\n  const animations: animations = {\n    swap: [],\n    section: [],\n  };\n  mergeSortAlg(array, copyArray, animations);\n  return animations;\n};\n","import React, { useState, useRef, useEffect } from \"react\";\nimport Style from \"./Grid.module.scss\";\nimport Key from \"./Key\";\n\nimport { quickSortIterative } from \"../Algorithms/QuickSort\";\nimport { heapSort } from \"../Algorithms/HeapSort\";\nimport { mergeSort } from \"../Algorithms/MergeSort\";\nimport { bubbleSort } from \"../Algorithms/BubbleSort\";\n\n// Interfaces\n\ninterface animations {\n  swap: Array<Array<number>>;\n  section: Array<Array<number>>;\n}\n\ninterface props {\n  startSort: boolean;\n  setSortRunningF(value: boolean): void;\n  sortRunning: boolean;\n  selectAlgorithm: number;\n  selectSpeed: number;\n  selectSize: number;\n  startGenerateArray: boolean;\n}\n\nfunction Grid(props: props) {\n  // Generation Functions\n\n  const generateArray = () => {\n    const array: Array<number> = [];\n    for (let i = 0; i < keysSize; i++) {\n      let number = Math.floor(Math.random() * (keysSize + 10 - 5) + 5);\n      if (array.includes(number)) {\n        number = Math.floor(Math.random() * (keysSize - 10 - 5) + 5);\n        i--;\n      } else {\n        array.push(number);\n      }\n    }\n    return array;\n  };\n\n  const regenerateArray = () => {\n    setKeys(() => {\n      return generateArray();\n    });\n    setCurrentSection([0, keysSize]);\n    setIsSorted(false);\n    setCurrentFrame(0);\n  };\n\n  // Animation Function Functions\n\n  const startSorting = () => {\n    props.setSortRunningF(true);\n    if (isSorted) {\n      props.setSortRunningF(false);\n    }\n\n    setAnim(() => {\n      const arr = keys.slice(0);\n      let animations;\n      if (props.selectAlgorithm === 0) {\n        animations = quickSortIterative(arr);\n      } else if (props.selectAlgorithm === 1) {\n        animations = mergeSort(arr);\n      } else if (props.selectAlgorithm === 2) {\n        animations = heapSort(arr);\n      } else if (props.selectAlgorithm === 3) {\n        animations = bubbleSort(arr);\n      } else {\n        animations = quickSortIterative(arr);\n      }\n      animations.swap.push([NaN, NaN, NaN, NaN]);\n      animations.section.push([0, keysSize]);\n      return animations;\n    });\n\n    setIsSorted(true);\n  };\n\n  const startAnimate = () => {\n    if (currentFrameRef.current > animRef.current.swap.length - 1) {\n      props.setSortRunningF(false);\n      return;\n    }\n\n    setCurrentFrame((s) => {\n      let frame = s;\n\n      setCurrentAnim(() => {\n        return animRef.current.swap[s];\n      });\n      setCurrentSection(() => {\n        return animRef.current.section[s];\n      });\n\n      setKeysModif((v) => {\n        const array = v.slice(0);\n        array[animRef.current.swap[s][0]] = animRef.current.swap[s][1];\n        array[animRef.current.swap[s][2]] = animRef.current.swap[s][3];\n        return array;\n      });\n\n      frame = frame + 1;\n      return frame;\n    });\n\n    setTimeout(startAnimate, props.selectSpeed);\n  };\n\n  // Render Values\n  const [firstRender, setFirstRender] = useState(false);\n\n  // Keys Values\n  const [keysSize, setKeysSize] = useState(150);\n  const [keys, setKeys] = useState(() => {\n    return generateArray();\n  });\n  const [keysModif, setKeysModif] = useState(() => {\n    const array = keys.slice(0);\n    return array;\n  });\n\n  // Animations Values\n  const [anim, setAnim] = useState(() => {\n    const animations: animations = {\n      swap: [],\n      section: [],\n    };\n    return animations;\n  });\n\n  const animRef = useRef(anim);\n  animRef.current = anim;\n\n  // Current Animations Values\n  const [currentAnim, setCurrentAnim] = useState([NaN, NaN, NaN, NaN]);\n  const [currentFrame, setCurrentFrame] = useState(NaN);\n\n  const currentFrameRef = useRef(currentFrame);\n  currentFrameRef.current = currentFrame;\n\n  const [currentSection, setCurrentSection] = useState([0, keysSize]);\n\n  // Sort Values\n  const [isSorted, setIsSorted] = useState(false);\n\n  // Effects\n  useEffect(() => {\n    if (isSorted) {\n      startAnimate();\n    }\n  }, [isSorted]);\n\n  useEffect(() => {\n    if (firstRender && !props.sortRunning) {\n      startSorting();\n    }\n    setFirstRender(true);\n  }, [props.startSort]);\n\n  useEffect(() => {\n    if (!props.sortRunning) {\n      regenerateArray();\n    }\n  }, [props.startGenerateArray]);\n\n  useEffect(() => {\n    if (!props.sortRunning) {\n      setKeysSize(props.selectSize);\n    }\n  }, [props.selectSize]);\n\n  useEffect(() => {\n    if (!props.sortRunning) {\n      regenerateArray();\n    }\n  }, [keysSize]);\n\n  useEffect(() => {\n    setKeysModif(() => {\n      const array = keys.slice(0);\n      return array;\n    });\n  }, [keys]);\n\n  return (\n    <div className={Style.Grid}>\n      <div className={Style.Grid_Container}>\n        {keys.map((k, i) => {\n          return (\n            <Key\n              key={i}\n              iden={Style.Key}\n              size={\n                i === currentAnim[0]\n                  ? currentAnim[1]\n                  : i === currentAnim[2]\n                  ? currentAnim[3]\n                  : keysModif[i]\n              }\n              selected={\n                i === currentAnim[0] || i === currentAnim[2] ? true : false\n              }\n              section={\n                i >= currentSection[0] && i <= currentSection[1] ? true : false\n              }\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default React.memo(Grid);\n","// Interface\n\ninterface animations {\n  swap: Array<Array<number>>;\n  section: Array<Array<number>>;\n}\n\n// Algorithm\n\nexport const bubbleSort = (arr: Array<number>) => {\n  const arrLength = arr.length;\n  let check;\n  const animations: animations = {\n    swap: [],\n    section: [],\n  };\n  do {\n    check = false;\n    for (let i = 0; i < arrLength; i++) {\n      if (arr[i] > arr[i + 1]) {\n        check = true;\n        animations.swap.push([i, arr[i + 1], i + 1, arr[i]]);\n        animations.section.push([i, arrLength]);\n        [arr[i], arr[i + 1]] = [arr[i + 1], arr[i]];\n      }\n      animations.swap.push([0, 0, 0, 0]);\n      animations.section.push([i, arrLength]);\n    }\n  } while (check);\n\n  return animations;\n};\n","import React, { useState } from \"react\";\nimport Style from \"./Range.module.scss\";\n\n// Interface\n\ninterface props {\n  numOfElements: Array<string>;\n  selectAlgorithmF(value: number): void;\n}\n\nfunction Range(props: props) {\n  const [activeCircle, setActiveCircle] = useState(0);\n\n  return (\n    <div className={Style.Range}>\n      <div className={Style.Range_InputContainer}>\n        {props.numOfElements.map((e, i) => {\n          return (\n            <label\n              className={Style.Range_InputContainer_Label}\n              key={e + \"-\" + i}\n              htmlFor={Style.Range_InputContainer_Circle + i}\n            >\n              {e}\n            </label>\n          );\n        })}\n        {props.numOfElements.map((e, i) => {\n          return (\n            <input\n              id={Style.Range_InputContainer_Circle + i}\n              key={e + \"-\" + i}\n              type=\"radio\"\n              className={Style.Range_InputContainer_Circle}\n              name=\"range\"\n              title={e}\n              onClick={() => {\n                setActiveCircle(i);\n                props.selectAlgorithmF(i);\n              }}\n            />\n          );\n        })}\n\n        <div className={Style.Range_InputContainer_Indicator}></div>\n        <div className={Style.Range_InputContainer_Line}></div>\n      </div>\n      <div className={Style.Range_TextContainer}>\n        {props.numOfElements.map((e, i) => {\n          return (\n            <h1\n              key={e + \"-\" + i}\n              title={e}\n              className={\n                i === activeCircle\n                  ? ` ${Style.Range_TextContainer_Text__Active}\n                      ${Style.Range_TextContainer_Text}`\n                  : Style.Range_TextContainer_Text\n              }\n            >\n              {e}\n            </h1>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default React.memo(Range);\n","import React from \"react\";\nimport Style from \"./Display-Panel.module.scss\";\n\nimport Range from \"./Range\";\n\n// Interface\n\ninterface props {\n  selectAlgorithmF(value: number): void;\n}\n\nfunction DisplayPanel(props: props) {\n  return (\n    <div className={Style.DisplayPanel}>\n      <Range\n        numOfElements={[\"Quick-Sort\", \"Merge-Sort\", \"Heap-Sort\", \"Bubble-Sort\"]}\n        selectAlgorithmF={props.selectAlgorithmF}\n      />\n    </div>\n  );\n}\n\nexport default React.memo(DisplayPanel);\n","import React, { useState } from \"react\";\nimport Style from \"./Circular-Button.module.scss\";\n\n// Interface\n\ninterface props {\n  setStarSortF?(): void;\n  setGenerateArrayF?(): void;\n  selectSpeedF?(value: number): void;\n  selectSizeF?(value: number): void;\n  selectSpeed?: number;\n  selectSize?: number;\n  sortRunning: boolean;\n  type: string;\n  id: string;\n}\n\nfunction CircularButton(props: props) {\n  // Animation\n  const [repeatAnim, setRepeatAnim] = useState(false);\n\n  return (\n    <button\n      aria-label={props.type}\n      title={props.type}\n      className={\n        props.sortRunning\n          ? `${Style.CircularButton} ${Style.CircularButton__Disabled}`\n          : props.type === \"Speed\" || props.type === \"Size\"\n          ? `${Style.CircularButton} ${Style.CircularButton__Indicator}`\n          : `${Style.CircularButton} ${Style.CircularButton__Design}`\n      }\n      onClick={() => {\n        if (!props.sortRunning) {\n          if (props.type === \"Repeat\" && props.setGenerateArrayF) {\n            props.setGenerateArrayF();\n            setRepeatAnim(true);\n            setTimeout(() => {\n              setRepeatAnim(false);\n            }, 300);\n          } else if (props.type === \"Play\" && props.setStarSortF) {\n            props.setStarSortF();\n          } else if (\n            props.type === \"Speed\" &&\n            props.selectSpeedF &&\n            props.selectSpeed !== undefined\n          ) {\n            if (props.selectSpeed < 150) {\n              props.selectSpeedF(props.selectSpeed + 10);\n            } else {\n              props.selectSpeedF(0);\n            }\n          } else if (\n            props.type === \"Size\" &&\n            props.selectSizeF &&\n            props.selectSize !== undefined\n          ) {\n            if (props.selectSize < 150) {\n              props.selectSizeF(props.selectSize + 10);\n            } else {\n              props.selectSizeF(0);\n            }\n          }\n        }\n      }}\n      onWheel={(e) => {\n        if (\n          (props.type === \"Size\" || props.type === \"Speed\") &&\n          !props.sortRunning\n        ) {\n          if (\n            props.type === \"Speed\" &&\n            props.selectSpeedF &&\n            props.selectSpeed !== undefined\n          ) {\n            if (e.nativeEvent.deltaY > 0) {\n              if (props.selectSpeed < 150) {\n                props.selectSpeedF(props.selectSpeed + 10);\n              } else {\n                props.selectSpeedF(0);\n              }\n            } else {\n              if (props.selectSpeed > 0) {\n                props.selectSpeedF(props.selectSpeed - 10);\n              } else {\n                props.selectSpeedF(150);\n              }\n            }\n          } else if (\n            props.type === \"Size\" &&\n            props.selectSizeF &&\n            props.selectSize !== undefined\n          ) {\n            if (e.nativeEvent.deltaY < 0) {\n              if (props.selectSize < 150) {\n                props.selectSizeF(props.selectSize + 10);\n              } else {\n                props.selectSizeF(0);\n              }\n            } else {\n              if (props.selectSize > 0) {\n                props.selectSizeF(props.selectSize - 10);\n              } else {\n                props.selectSizeF(150);\n              }\n            }\n          }\n        }\n      }}\n      id={props.id}\n    >\n      <svg className={Style.CircularButton_Svg}>\n        <circle\n          cx=\"25\"\n          cy=\"25\"\n          r=\"23\"\n          className={Style.CircularButton_Svg_Circle}\n          style={{\n            strokeDashoffset:\n              props.type === \"Speed\"\n                ? `${\n                    props.selectSpeed !== undefined\n                      ? props.selectSpeed + 50\n                      : 200\n                  }`\n                : props.type === \"Size\"\n                ? `${\n                    props.selectSize !== undefined\n                      ? 200 - props.selectSize\n                      : 200\n                  }`\n                : \"\",\n          }}\n        />\n      </svg>\n      {/* Play */}\n      <div\n        className={Style.CircularButton_Play}\n        style={{ display: props.type === \"Play\" ? \"\" : \"none\" }}\n      ></div>\n      <div\n        className={\n          repeatAnim\n            ? `${Style.CircularButton_Repeat} ${Style.CircularButton_Repeat__Active}`\n            : Style.CircularButton_Repeat\n        }\n        style={{ display: props.type === \"Repeat\" ? \"\" : \"none\" }}\n      ></div>\n      {/* Speed */}\n      <div\n        className={Style.CircularButton_Speed}\n        style={{\n          display: props.type === \"Speed\" ? \"\" : \"none\",\n        }}\n      ></div>\n      {/* Size */}\n      <div\n        className={Style.CircularButton_Size}\n        style={{\n          display: props.type === \"Size\" ? \"\" : \"none\",\n        }}\n      ></div>\n    </button>\n  );\n}\n\nexport default React.memo(CircularButton);\n","import React from \"react\";\nimport Style from \"./Control-Panel.module.scss\";\n\nimport CircularButton from \"./Circular-Button\";\n\n// Interface\n\ninterface props {\n  setStarSortF(): void;\n  setGenerateArrayF(): void;\n  selectSpeedF(value: number): void;\n  selectSizeF(value: number): void;\n  selectSpeed: number;\n  selectSize: number;\n  sortRunning: boolean;\n}\n\nfunction ControlPanel(props: props) {\n  return (\n    <div className={Style.ControlPanel}>\n      {/* Play */}\n      <CircularButton\n        setStarSortF={props.setStarSortF}\n        sortRunning={props.sortRunning}\n        type={\"Play\"}\n        id={Style.CircularButton}\n      />\n      {/* Repeat */}\n      <CircularButton\n        sortRunning={props.sortRunning}\n        setGenerateArrayF={props.setGenerateArrayF}\n        type={\"Repeat\"}\n        id={Style.CircularButton}\n      />\n      {/* Speed */}\n      <CircularButton\n        sortRunning={props.sortRunning}\n        type={\"Speed\"}\n        selectSpeed={props.selectSpeed}\n        selectSpeedF={props.selectSpeedF}\n        id={Style.CircularButton}\n      />\n      {/* Size */}\n      <CircularButton\n        sortRunning={props.sortRunning}\n        type={\"Size\"}\n        selectSizeF={props.selectSizeF}\n        selectSize={props.selectSize}\n        id={Style.CircularButton}\n      />\n    </div>\n  );\n}\n\nexport default React.memo(ControlPanel);\n","import React, { useState } from \"react\";\nimport Style from \"./App.module.scss\";\n\nimport Grid from \"./components/Blocks/Grid\";\nimport DisplayPanel from \"./components/UI/Display-Panel\";\nimport ControlPanel from \"./components/UI/Control-Panel\";\n\nfunction App() {\n  // Set Functions\n\n  const setStarSortF = () => {\n    setStarSort(() => {\n      return startSort ? false : true;\n    });\n  };\n\n  const setGenerateArrayF = () => [\n    setStartGenerateArray(() => {\n      return startGenerateArray ? false : true;\n    }),\n  ];\n\n  const setSortRunningF = (value: boolean) => {\n    setSortRunning(value);\n  };\n\n  // Select Functions\n\n  const selectAlgorithmF = (value: number) => {\n    setSelectAlgorithm(value);\n  };\n\n  const selectSpeedF = (value: number) => {\n    setSelectSpeed(value);\n  };\n\n  const selectSizeF = (value: number) => {\n    setSelectSize(value);\n  };\n\n  // Set Values\n  const [startSort, setStarSort] = useState(false);\n  const [sortRunning, setSortRunning] = useState(false);\n  const [startGenerateArray, setStartGenerateArray] = useState(false);\n\n  // Select Values\n  const [selectAlgorithm, setSelectAlgorithm] = useState(0);\n  const [selectSpeed, setSelectSpeed] = useState(10);\n  const [selectSize, setSelectSize] = useState(80);\n\n  return (\n    <div className={Style.App}>\n      <div className={Style.App__Container}>\n        <DisplayPanel selectAlgorithmF={selectAlgorithmF} />\n        <Grid\n          selectSpeed={selectSpeed}\n          startSort={startSort}\n          sortRunning={sortRunning}\n          setSortRunningF={setSortRunningF}\n          selectAlgorithm={selectAlgorithm}\n          selectSize={selectSize}\n          startGenerateArray={startGenerateArray}\n        />\n      </div>\n\n      <ControlPanel\n        selectSpeedF={selectSpeedF}\n        selectSizeF={selectSizeF}\n        selectSize={selectSize}\n        selectSpeed={selectSpeed}\n        setStarSortF={setStarSortF}\n        sortRunning={sortRunning}\n        setGenerateArrayF={setGenerateArrayF}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore, ThunkAction, Action } from \"@reduxjs/toolkit\";\n\nexport const store = configureStore({\n  reducer: {},\n});\n\nexport type AppDispatch = typeof store.dispatch;\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://cra.link/PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://cra.link/PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { store } from \"./app/store\";\nimport { Provider } from \"react-redux\";\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorkerRegistration.register();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Range\":\"Range_Range__3W46V\",\"Range_InputContainer\":\"Range_Range_InputContainer__s9njN\",\"Range_InputContainer_Label\":\"Range_Range_InputContainer_Label__1Bikk\",\"Range_InputContainer_Circle\":\"Range_Range_InputContainer_Circle__1xuCo\",\"Range_InputContainer_Indicator\":\"Range_Range_InputContainer_Indicator__2LJPn\",\"Range_InputContainer_Line\":\"Range_Range_InputContainer_Line__3wMuB\",\"Range_TextContainer\":\"Range_Range_TextContainer__2GjCu\",\"Range_TextContainer_Text\":\"Range_Range_TextContainer_Text__1WUnz\",\"Range_TextContainer_Text__Active\":\"Range_Range_TextContainer_Text__Active__2hgEi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Key\":\"Key_Key__1xYxa\",\"Key__Selected\":\"Key_Key__Selected__V3ZWc\",\"Key__Section\":\"Key_Key__Section__2NquW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ControlPanel\":\"Control-Panel_ControlPanel__1Tx6w\",\"CircularButton\":\"Control-Panel_CircularButton__2BTel\"};"],"sourceRoot":""}